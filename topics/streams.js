//Stream types

//1Ô∏è‚É£ Readable - —á—Ç–µ–Ω–∏–µ
//2Ô∏è‚É£ Writable - –∑–∞–ø–∏—Å—å
//3Ô∏è‚É£ Duplex - –î–ª—è —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏
//4Ô∏è‚É£ Transform - –¢–∞–∫–æ–π–¥–µ –∫–∞–∫ Duplex, –Ω–æ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Ä–µ —á—Ç–µ–Ω–∏—è

const fs = require('fs');
const path = require('path');

// fs.readFile(path.resolve(__dirname, 'test.txt'), (err, data) => { // —Å—á–∏—Ç–∞–ª–∏ –≤–µ—Å—å
//     if(err) {
//         console.log(err);
//     }
//     console.log(data) // —Ü–µ–ª–∏–∫–æ–º —Ñ–∞–π–ª –≤–µ—Å–∏—Ç 308814 bytes (308kb)
// })

const stream = fs.createReadStream(path.resolve(__dirname, 'test.txt')) // –†–∞–∑–±–∏–ª–∏ –Ω–∞ —Å—Ç—Ä–∏–º—ã, –º–æ–∂–µ–º —Ç–∞–∫ –∂–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫—É –∏ —Ç.–¥ {encoding: 'utf-8'}

stream.on('data', (chunk) => { // –°–æ–±—ã—Ç–∏–µ 'data' - –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, chunk - –∫—É—Å–æ—á–µ–∫ –∫–æ–¥–∞ 
    console.log(chunk)  // –∫–∞–∂–¥—ã–π chunk –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 65486 bytes (64kb)
})

stream.on('open', () => console.log('–ù–∞—á–∞–ª–∏ —á–∏—Ç–∞—Ç—å!'));     // –ï—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π 
stream.on('end', () => console.log('–ó–∞–∫–æ–Ω—á–∏–ª–∏ —á–∏—Ç–∞—Ç—å!'));   // –ü–æ—Ä—è–¥–æ–∫ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–µ –≤–∞–∂–µ–Ω
stream.on('error', (err) => console.log(err.message));      // –í–∞–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —á—Ç–æ–±—ã –Ω–µ —É–ø–∞–ª–æ NodeJS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

//=================================================================

const stream2 = fs.createWriteStream(path.resolve(__dirname, 'test2.txt'));
for(let i = 0; i <= 20; i++) {
    stream2.write(`String #${i}\n`);
}
stream2.end()   // writable stream - –Ω—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∞—Ç—å –≤—Ä—É—á–Ω—É—é
stream.close()  // –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –ø–æ —Ä–∞–∑–Ω–æ–º—É end, close, destroy 
stream.destroy()

// –ü—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å http —Å–µ—Ä–≤–µ—Ä–æ–º –Ω–∞–º –ª–æ—Å—Ç—É–ø–Ω—ã 2 –æ–±—ä–µ–∫—Ç–∞: res, req –∏ –æ–Ω–∏ –æ–±–∞ —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–∏–º–∞–º–∏

const http = require('http');

http.createServer((res, req) => {
    // res - readable stream
    // req - writable stream
    const stream = fs.createReadStream(path.resolve(__dirname, 'test.txt'));

// üëáüèª–Ω–µ —É—Å–ø–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–µ–¥–ª–µ–Ω–Ω–µ —á–µ–º —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ 
    stream.on('data', chunk => res.write(chunk));
    stream.on('data', chunk => res.end());

// –ß—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω—É–∂–µ–Ω (readable –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç —á–∏—Ç–∞—Ç—å –Ω–æ–≤—É—é –ø–æ—Ä—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞ writable –Ω–µ –∑–∞–∫–æ–Ω—Ü–∏–ª –ø–∏—Å–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é)
    stream.pipe(res)
})